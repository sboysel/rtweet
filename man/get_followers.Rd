% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/followers.R
\name{get_followers}
\alias{get_followers}
\title{GET followers/ids}
\usage{
get_followers(user, n = 5000, retryonratelimit = FALSE, ...)
}
\arguments{
\item{user}{Screen name or user ID of target user from which the user IDs
of followers will be retrieved.}

\item{n}{Number of followers to return. Defaults to 5000, which is the max
number of followers returned by a single API request. Twitter allows up
to 15 of these requests every 15 minutes, which means 75,000 is the max
number of followers to return without waiting for the rate limit to reset.}

\item{retryonratelimit}{If you'd like to retrieve more than 75,000 followers
in a single call, then set \code{retryonratelimit = TRUE} and this function
will use \code{\link{Sys.sleep}} until rate limits reset and the desired n
is achieved or the number of total followers is exhausted. This defaults
to FALSE. See details for more info regarding possible issues with timing
misfires.}

\item{...}{For other possible arguments see \code{\link{get_followers.default}}.}
}
\value{
A tibble data frame of follower IDs (one column named "user_id").
}
\description{
Get user IDs of accounts following target user.
}
\details{
When \code{retryonratelimit = TRUE} this function internally
  makes a rate limit API call to get information on (a) the number of requests
  remaining and (b) the amount of time until the rate limit resets. So, in
  theory, the sleep call should only be called once between waves of data
  collection. However, as a fail safe, if a system's time is calibrated such
  that it expires before the rate limit reset, or if, in another session, the
  user dips into the rate limit, then this function will wait (use Sys.sleep
  for a second time) until the next rate limit reset. Users should monitor
  and test this before making especially large calls as any systematic issues
  could create sizable inefficiencies.
}
