% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/timeline.R
\name{get_timelines2}
\alias{get_timelines2}
\title{get timelines}
\usage{
get_timelines2(users, n = 200, parse = TRUE, ...)
}
\arguments{
\item{users}{Vector user names and or user IDs. Can be mixture of both.}

\item{n}{Number of desired tweets to return per user. Must be either one value
or the same length as supplied number of users.}

\item{parse}{Logical, indicating whether to return parsed
vector or nested list (fromJSON) object. By default,
\code{parse = TRUE} saves you the time [and frustrations]
associated with disentangling the Twitter API return objects.}

\item{\dots}{Other args passed along to get_timeline.}
}
\value{
Data frame or if parse is false then list.
}
\description{
get timelines
}
\examples{
\dontrun{
rt <- get_timelines(
  users = c("hadleywickham", "hspter", "rdpeng", "calbon", "dataandme"),
  n = 400
)
if (requireNamespace("dplyr", quietly = TRUE)) {
  rt \%>\%
    dplyr::group_by(screen_name) \%>\%
    word_n() \%>\%
    dplyr::filter(!word \%in\% stopwords) \%>\%
    dplyr::group_by(screen_name) \%>\%
    dplyr::top_n(10, n) \%>\%
    print(n = 50)
} else {
  rt \%>\%
    word_n("screen_name") \%>\%
    subset(!word \%in\% stopwords & n > 8) \%>\%
    print(n = 50)
}
}
}
